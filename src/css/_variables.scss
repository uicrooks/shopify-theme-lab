@use "variables/colors.scss" as colors;
@use "variables/breakpoints.scss" as breakpoints;
@forward "variables/colors.scss";
@forward "variables/breakpoints.scss";

$colors: ();
// stylelint-disable-next-line scss/dollar-variable-default
$colors: map-merge(
  (
    "primary": colors.$primary,
    "primary-orange": colors.$primary-orange,
    "brown": colors.$primary-brown,
    "primary-brown": colors.$primary-brown,
    "secondary": colors.$secondary,
    "green": colors.$green,
    "red": colors.$red,
    "white": colors.$white,
    "light-orange": colors.$light-orange,
    "disabled": colors.$disabled,
    "gray": colors.$gray,
    "black": colors.$black,
  ),
  $colors
);

$theme-colors: ();
// stylelint-disable-next-line scss/dollar-variable-default
$theme-colors: map-merge(
  (
    "primary": colors.$primary-orange,
    "secondary": colors.$primary-brown,
    "green": colors.$green,
    "brown": colors.$brown,
    "light-orange": colors.$light-orange,
    "black": colors.$black,
    "dark": colors.$dark,
    "white": colors.$white,
    "orange": colors.$orange,
    "tan": colors.$tan,
    "tan-2": colors.$tan-2,
    "red": colors.$red,
    "gray": colors.$gray,
    "disabled": colors.$disabled,
  ),
  $theme-colors
);

@each $color in $theme-colors {
  .bg-#{nth($color,1)} {
    background-color: nth($color,2);
  }
  .text-#{nth($color,1)} {
    color: nth($color,2);
  }
}

$grid-breakpoints: (
  xs: breakpoints.$xs,
  sm: breakpoints.$sm,
  md: breakpoints.$md,
  lg: breakpoints.$lg,
  xl: breakpoints.$xl
);

// Grid containers
$container-max-widths: (
  sm: 540px,
  md: 720px,
  lg: 960px,
  xl: 1024px
);

// Grid columns
$grid-columns:                12;
$grid-gutter-width:           30px;